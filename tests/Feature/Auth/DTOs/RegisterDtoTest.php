<?php

declare(strict_types=1);

namespace Tests\Feature\Auth\DTOs;

use App\Http\Requests\RegisterFormRequest;
use InvalidArgumentException;
use Src\Domain\Auth\DTOs\RegisterDto;
use Src\Support\ValueObjects\Email;
use Src\Support\ValueObjects\UserName;
use Tests\TestCase;

class RegisterDtoTest extends TestCase
{
    private array $payload;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->payload = [
            'email' => 'valid@mail.com',
            'name' => 'name',
            'password' => '123456789'
        ];
    }

    public function test_create_from_request_success()
    {
        $request = new RegisterFormRequest($this->payload);

        $dto = RegisterDto::fromRequest($request);

        $this->assertInstanceOf(RegisterDto::class, $dto);
        $this->assertEquals($dto->name->value, $this->payload['name']);
        $this->assertEquals($dto->email->value, $this->payload['email']);
        $this->assertEquals($dto->password, $this->payload['password']);
    }

    public function test_invalid_arguments()
    {
        $this->payload['name'] = 's';

        $this->expectException(InvalidArgumentException::class);

        RegisterDto::make(
            UserName::fromString($this->payload['name']),
            Email::fromString($this->payload['email']),
            $this->payload['password']
        );
    }
}
